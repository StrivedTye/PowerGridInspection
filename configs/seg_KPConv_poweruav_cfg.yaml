# dataset configs
dataset_cfg:
  dataset_type: PowerUAV
  data_root_dir: /workspace/data/KITTI_Tracking/ #/dataset/KITTI_Tracking/
  num_points: 2048  # Number of input points
  num_classes: 6
  sub_grid_size: 0.06  # preprocess_parameter
  

# model configs
model_cfg:
  model_type: KPConv
  num_classes: 5 # the number of valid classes: len(all_labels)- len(ignored_labels)
  ignored_labels: [0]
  all_labels: [0, 1, 2, 3, 4, 5]
  class_w: []

  architecture: ['simple',
                 'resnetb',
                 'resnetb_strided',
                 'resnetb',
                 'resnetb',
                 'resnetb_strided',
                 'resnetb',
                 'resnetb',
                 'resnetb_strided',
                 'resnetb',
                 'resnetb',
                 'resnetb_strided',
                 'resnetb',
                 'nearest_upsample',
                 'unary',
                 'nearest_upsample',
                 'unary',
                 'nearest_upsample',
                 'unary',
                 'nearest_upsample',
                 'unary']

  # Radius of the input sphere
  in_radius: 4.0
  val_radius: 4.0

  # Number of kernel points
  num_kernel_points: 15

  # Size of the first subsampling grid in meter
  first_subsampling_dl: 0.06

  # Radius of convolution in "number grid cell". (2.5 is the standard value)
  conv_radius: 2.5

  # Radius of deformable convolution in "number grid cell". Larger so that deformed kernel can spread out
  deform_radius: 6.0

  # Radius of the area of influence of each kernel point in "number grid cell". (1.0 is the standard value)
  KP_extent: 1.2

  # Behavior of convolutions in ('constant', 'linear', 'gaussian')
  KP_influence: linear

  # Aggregation function of KPConv in ('closest', 'sum')
  aggregation_mode: sum

  # Choice of input features
  first_features_dim: 128
  in_features_dim: 2

  # Can the network learn modulations
  modulated: False

  # Batch normalization parameters
  use_batch_norm: True
  batch_norm_momentum: 0.02

  # Deformable offset loss
  # 'point2point' fitting geometry by penalizing distance from deform point to input points
  # 'point2plane' fitting geometry by penalizing distance from deform point to input point triplet (not implemented)
  deform_fitting_mode: point2point
  deform_fitting_power: 1.0              # Multiplier for the fitting/repulsive loss
  deform_lr_factor: 0.1                  # Multiplier for learning rate applied to the deformations
  repulse_extent: 1.2                    # Distance of repulsion for deformed kernel points


# task configs
task_type: SegTask
#missing_threshold: 0.2


# optimizer & scheduler configs
optimizer_cfg:
  optimizer_type: Adam
  lr: 0.01
  weight_decay: 0
  betas: [0.5, 0.999]
  eps: 1.0e-6


scheduler_cfg:
  scheduler_type: StepLR
  step_size: 20
  gamma: 0.1

# loss configs
loss_cfg:
  ce_weight: 1.0


# train & eval configs
train_cfg:
  max_epochs: 100
  train_steps: 500  # Number of steps per epochs
  batch_size: 6
  num_workers: 4
  save_per_epoch: 40
  save_top_k: 5
  val_per_epoch: 1


eval_cfg:
  batch_size: 1
  num_workers: 4